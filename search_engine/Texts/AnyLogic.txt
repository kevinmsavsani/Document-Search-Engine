| name                   = AnyLogic
| logo                   = 
| screenshot             =
| caption                = 
| collapsible            = yes
| author                 = 
| developer              = XJ Technologies
| released               = 
| latest release date    = 
| latest preview version = 
| latest preview date    = 
| frequently updated     = 
| programming language   = [[Java (programming language)|Java SE]]
| operating system       = [[Cross-platform]]
| platform               = 
| size                   = 
| language               = 
| status                 = 
| genre                  = [[Simulation software]]
| license                = [[Proprietary software|Proprietary]]
| website                = [http://www.anylogic.com www.anylogic.com]
}}

'''AnyLogic''' is a multi-method [[simulation]] modeling tool developed by XJ Technologies.

==History of AnyLogic==
In the beginning of 1990s there was a big interest in the mathematical approach to modeling and simulation of parallel processes. This approach may be applied to the analysis of correctness of parallel and distributed programs. The Distributed Computer Network (DCN) research group at Saint Petersburg Technical University developed such a software system for the analysis of program correctness; the new tool was named COVERS (Concurrent Verification and Simulation). This system allowed graphical modeling notation for system structure and behavior. The tool was applied for the research granted by Hewlett Packard (?).

In 1998 the success of this research inspired the DCN laboratory to organize a company with a mission to develop a new age simulation software. The emphasis in the development was placed on applied methods: simulation, performance analysis, behavior of stochastic systems, optimization and visualization. New software released in 2000 was based on the latest advantages of information technologies: an object-oriented approach, elements of the UML standard, the use of Java, a modern GUI, etc. 
[[Image:Different simulation methods.JPG|thumb | 500px| right |Three business simulation approaches]]
The tool was named AnyLogic, because it supported all three well-known modeling approaches:
* [[System dynamics]],
* [[Discrete event simulation]],
The first version of AnyLogic was AnyLogic 4, because the numbering continues the numbering of COVERS 3.0.

A big step was taken in 2003, when AnyLogic 5 was released. It was focused on business simulation in the following domains:
* [[Social]] and [[Ecosystem]] Dynamics,
* [[Defense (military)|Defense]] ,
* [[Project management|Project]] and [[Asset Management|Asset]] Management,
* [[Information technology management|IT Infrastructure]],


==AnyLogic and Java==

==Multi-method simulation modeling==
[[Image:Simulation approaches vs abstraction levels.jpg|thumb | 500px| right |How simulation approaches correspond to the level of abstraction]]
AnyLogic models can be based on any of the main simulation modeling paradigms: [[Discrete event simulation|discrete event or process-centric]] (DE), [[systems dynamics]] (SD), and [[Agent-based model|agent-based]] (AB).
  
System dynamics and discrete event are traditional simulation approaches, agent based is new. Technically, the system dynamics approach deals mostly with continuous processes whereas "discrete event" (by which we mean all descendants of [[GPSS]] also known as process-centric simulation approach) and agent based models work mostly in discrete time, i.e. jump from one event to another. 

System dynamics and discrete event simulation historically have been taught at universities to very different groups of students, namely [[management]] and [[economy]], industrial and [[Operations research|operation research]] engineers. As a result, there are two distinct practitioners' communities that never talk to each other. 

Agent based modeling until recently has been mostly a purely academic topic. However, the increasing demand for global business optimization caused leading modelers looking at combined approaches to gain a deeper insight into complex interdependent processes having very different natures.


AnyLogic allows the modeler to combine these simulation approaches within the same model.  There is no fixed hierarchy.  So, as an example, one could create a model of the package shipping industry where carriers are modeled as agents acting/reacting independently whereas the inner workings of their transport and infrastructure networks could be modeled with discrete event simulation.  Similarly, one can model consumers as agents whose aggregate behavior feed a systems dynamics model capturing flows such as revenues or costs which do not need to be tied to individual agents.  This mixed language approach is directly applicable to a wide variety of complex modeling problems that may be modeled via any one approach albeit with compromises.

==Simulation language==
[[Image:AnyLogic Simulation Language.jpg|thumb | 500px| right |Simulation language constructions provided by AnyLogic]]
* '''Stock & Flow Diagrams''' are used for System Dynamics modeling.
* '''[[State machine|Statecharts]]''' are used mostly in Agent Based modeling to define agent behavior.  They are also often used in Discrete Event modeling, e.g. to simulate machine failure.
* '''Action charts''' are used to define algorithms. They may be used in Discrete Event modeling, e.g. for call routing, or in Agent Based modeling, e.g. for agent decision logic.
* '''Process flowcharts''' are the basic construction used to define process in Discrete Event modeling. Looking at this flowchart you may see why Discrete Event  style is often called Process Centric.
The language also includes: low level modeling constructions (variables, equations, parameters, events etc.), presentation shapes (lines, polylines, ovals etc.), analysis facilities (datasets, histograms, plots), connectivity tools, standard images, and experiments frameworks.

==AnyLogic libraries==
* '''The Enterprise Library''' is designed to support  DE simulation in Manufacturing, Supply Chain, Logistics and Healthcare areas.  Using the Enterprise Library objects you can model real-world systems in terms of entities (transactions, customers, products, parts, vehicles, etc.), processes (sequences of operations typically involving queues, delays, resource utilization), and resources.  The processes are specified in the form of flowcharts.
* '''The Pedestrian Library''' is dedicated to simulate pedestrian flows in a "physical" environment.  It allows you to create models of pedestrian-intensive buildings (like subway stations, security checks etc.) or streets (large numbers of pedestrians).  Models support statistics collection on pedestrian density in different areas.  This ensures acceptable performance of service points with a hypothetical load, estimates lengths of stay in specific areas, and detects potential problems with interior geometry – such as the effect of adding too many obstacles -  and other applications.  In models created with the Pedestrian Library pedestrians move in continuous space, reacting to different kinds of obstacles (walls, different kinds of areas) as well as other pedestrians.  Pedestrians are simulated as interacting agents with complex behavior, but the AnyLogic Pedestrian Library provides a higher-level interface for fast creation of pedestrian models in the style of flowcharts.
* '''The Rail Library''' supports modeling, simulating and visualizing operations of a rail yard of any complexity and scale. The rail yard models can be combined with discrete event or agent based models related to: loading and unloading, resource allocation, maintenance, business processes, and other transportation activities.

Beside of these standard libraries user can create his own libraries and distribute them.

== See also ==
* [[Comparison of agent-based modeling software]]
* [[List of computer simulation software]]
* [[List of discrete event simulation software]]
* [[Computer simulation]]

== References ==
{{reflist|3}}

== Further reading ==
* {{cite book|last=Law|first=Averill M.|title=Simulation Modeling and Analysis with Expertfit Software |year=2006|publisher=McGraw-Hill Science|id=ISBN 978-0-07-329441-4}}
* {{cite book|last=Banks|first=Jerry|coauthors=John Carson, Barry Nelson, David Nicol|title=Discrete-event system simulation - 4th edition|year=2004|publisher=Prentice Hall|id=ISBN 978-0-13-144679-3}}
* {{cite book|last=Sterman|first=John D.|title=Business Dynamics: Systems thinking and modeling for a complex world|year=2000|publisher=McGraw Hill|id=ISBN 0-07-231135-5}}

== External links ==
{{Wikibooks|Simulation with AnyLogic}}
* [http://www.anylogic.com AnyLogic official web-site]
* [http://www.xjtek.com/anylogic/help/ AnyLogic On-line Help]
* [http://www.xjtek.com/anylogic/resources/book/ The Big Book of AnyLogic]
* [http://www.xjtek.com/anylogic/resources/videos/ AnyLogic Video Tour (How-to's, model examples etc.)]
* [http://simulation123.com/index.php?board=12.0 Anylogic support at simulation123.com]

{{DEFAULTSORT:Anylogic}}
[[Category:Simulation software]]
[[Category:Windows software]]
[[Category:Mac OS software]]
[[Category:Linux software]]
[[Category:Agent-based software]]
[[Category:2000 software]]

[[de:AnyLogic]]
[[es:AnyLogic]]
[[fa:انی‌لاجیک]]
[[fr:AnyLogic]]
[[lt:AnyLogic]]
[[hu:AnyLogic]]
[[ja:AnyLogic]]
[[pt:AnyLogic]]
[[ro:AnyLogic]]
[[ru:AnyLogic]]
[[sv:AnyLogic]]
